{"version":3,"sources":["turbopack:///[project]/better-auth-pulse-studio/utils/parseAuthToNodes.ts"],"sourcesContent":["import { Node, Edge } from \"./convertPulseConfigToFlowNodes\";\n\ninterface ParsedAuthConfig {\n  hasDatabase?: boolean;\n  databaseProvider?: string;\n  hasEmailPassword?: boolean;\n  emailPasswordConfig?: any;\n  hasEmailVerification?: boolean;\n  emailVerificationConfig?: any;\n  socialProviders?: string[];\n  hasAccountLinking?: boolean;\n  accountLinkingConfig?: any;\n  hasRateLimit?: boolean;\n  rateLimitConfig?: any;\n  hasAdvanced?: boolean;\n  advancedConfig?: any;\n}\n\nfunction parseAuthFileContent(content: string): ParsedAuthConfig {\n  const config: ParsedAuthConfig = {};\n\n  // Check for database configuration\n  if (content.includes(\"prismaAdapter\")) {\n    config.hasDatabase = true;\n    const providerMatch = content.match(/provider:\\s*[\"'](\\w+)[\"']/);\n    config.databaseProvider = providerMatch ? providerMatch[1] : \"sqlite\";\n  }\n\n  // Check for email and password\n  if (content.includes(\"emailAndPassword\")) {\n    config.hasEmailPassword = true;\n    const emailPasswordMatch = content.match(\n      /emailAndPassword:\\s*{([\\s\\S]+?)}/\n    );\n    if (emailPasswordMatch) {\n      const configText = emailPasswordMatch[1];\n      config.emailPasswordConfig = {\n        minLength: extractValue(configText, \"minPasswordLength\") || 8,\n        maxLength: extractValue(configText, \"maxPasswordLength\") || 128,\n        requireVerification:\n          extractBooleanValue(configText, \"requireEmailVerification\") || false,\n        autoSignIn: extractBooleanValue(configText, \"autoSignIn\") || true,\n        resetTokenExpiresIn:\n          extractValue(configText, \"resetPasswordTokenExpiresIn\") || 3600,\n      };\n    }\n  }\n\n  // Check for email verification\n  if (content.includes(\"emailVerification\")) {\n    config.hasEmailVerification = true;\n    const emailVerificationMatch = content.match(\n      /emailVerification:\\s*{([\\s\\S]+?)}/\n    );\n    if (emailVerificationMatch) {\n      const configText = emailVerificationMatch[1];\n      config.emailVerificationConfig = {\n        sendOnSignUp: extractBooleanValue(configText, \"sendOnSignUp\") || true,\n        sendOnSignIn: extractBooleanValue(configText, \"sendOnSignIn\") || false,\n        autoSignInAfterVerification:\n          extractBooleanValue(configText, \"autoSignInAfterVerification\") ||\n          true,\n        tokenExpiresIn: extractValue(configText, \"tokenExpiresIn\") || 3600,\n      };\n    }\n  }\n\n  // Check for social providers\n  config.socialProviders = [];\n  if (content.includes(\"google:\")) config.socialProviders.push(\"google\");\n  if (content.includes(\"github:\")) config.socialProviders.push(\"github\");\n\n  // Check for account linking\n  if (content.includes(\"accountLinking\")) {\n    config.hasAccountLinking = true;\n    const accountMatch = content.match(/accountLinking:\\s*{([\\s\\S]+?)}/);\n    if (accountMatch) {\n      const configText = accountMatch[1];\n      config.accountLinkingConfig = {\n        trustedProviders:\n          extractArrayValue(configText, \"trustedProviders\") || [],\n        allowDifferentEmails:\n          extractBooleanValue(configText, \"allowDifferentEmails\") || false,\n      };\n    }\n  }\n\n  // Check for rate limiting\n  if (content.includes(\"rateLimit\")) {\n    config.hasRateLimit = true;\n    const rateLimitMatch = content.match(/rateLimit:\\s*{([\\s\\S]+?)}/);\n    if (rateLimitMatch) {\n      const configText = rateLimitMatch[1];\n      config.rateLimitConfig = {\n        window: extractValue(configText, \"window\") || 60,\n        maxRequests: extractValue(configText, \"max\") || 100,\n        customRules: extractObjectValue(configText, \"customRules\") || {},\n      };\n    }\n  }\n\n  // Check for advanced options\n  if (\n    content.includes(\"useSecureCookies\") ||\n    content.includes(\"cookiePrefix\")\n  ) {\n    config.hasAdvanced = true;\n    config.advancedConfig = {\n      useSecureCookies: true,\n      httpOnlyCookies: true,\n      secureCookies: true,\n    };\n  }\n\n  return config;\n}\n\nfunction extractValue(text: string, key: string): number | null {\n  const match = text.match(new RegExp(`${key}:\\\\s*(\\\\d+)`));\n  return match ? parseInt(match[1]) : null;\n}\n\nfunction extractBooleanValue(text: string, key: string): boolean | null {\n  const match = text.match(new RegExp(`${key}:\\\\s*(true|false)`));\n  return match ? match[1] === \"true\" : null;\n}\n\nfunction extractArrayValue(text: string, key: string): string[] | null {\n  const match = text.match(new RegExp(`${key}:\\\\s*\\\\[([^\\\\]]+)\\\\]`));\n  if (match) {\n    return match[1].split(\",\").map((s) => s.trim().replace(/['\"]/g, \"\"));\n  }\n  return null;\n}\n\nfunction extractObjectValue(text: string, key: string): any | null {\n  const match = text.match(new RegExp(`${key}:\\\\s*({[^}]+})`));\n  if (match) {\n    try {\n      return JSON.parse(match[1].replace(/(\\w+):/g, '\"$1\":'));\n    } catch {\n      return {};\n    }\n  }\n  return null;\n}\n\nexport function generateNodesFromAuthFile(authFileContent?: string): {\n  nodes: Node[];\n  edges: Edge[];\n} {\n  if (!authFileContent) {\n    // Return just the auth starter if no auth file exists\n    return {\n      nodes: [\n        {\n          id: \"1\",\n          type: \"authStarter\",\n          position: { x: 250, y: 50 },\n          data: { label: \"Auth Starter\" },\n        },\n      ],\n      edges: [],\n    };\n  }\n\n  const config = parseAuthFileContent(authFileContent);\n  const nodes: Node[] = [];\n  const edges: Edge[] = [];\n  let nodeId = 1;\n  let yPosition = 0;\n\n  // Always add auth starter\n  nodes.push({\n    id: nodeId.toString(),\n    type: \"authStarter\",\n    position: { x: 0, y: yPosition },\n    data: { label: \"Auth Start\" },\n  });\n  const authStarterId = nodeId.toString();\n  nodeId++;\n  yPosition += 150;\n\n  // Add database chain if present\n  if (config.hasDatabase) {\n    const databaseId = nodeId.toString();\n    nodes.push({\n      id: databaseId,\n      type: \"database\",\n      position: { x: 0, y: yPosition },\n      data: { label: \"Database\" },\n    });\n    edges.push({\n      id: `e${authStarterId}-${databaseId}`,\n      source: authStarterId,\n      target: databaseId,\n      animated: true,\n    });\n    nodeId++;\n    yPosition += 150;\n\n    const prismaId = nodeId.toString();\n    nodes.push({\n      id: prismaId,\n      type: \"prisma\",\n      position: { x: 0, y: yPosition },\n      data: { label: \"Prisma Adapter\" },\n    });\n    edges.push({\n      id: `e${databaseId}-${prismaId}`,\n      source: databaseId,\n      target: prismaId,\n      animated: true,\n    });\n    nodeId++;\n    yPosition += 150;\n\n    const providerId = nodeId.toString();\n    nodes.push({\n      id: providerId,\n      type: \"provider\",\n      position: { x: 0, y: yPosition },\n      data: { label: \"DB Provider\" },\n    });\n    edges.push({\n      id: `e${prismaId}-${providerId}`,\n      source: prismaId,\n      target: providerId,\n      animated: true,\n    });\n    nodeId++;\n    yPosition += 150;\n\n    const dbTypeId = nodeId.toString();\n    nodes.push({\n      id: dbTypeId,\n      type: config.databaseProvider || \"sqlite\",\n      position: { x: 0, y: yPosition },\n      data: { label: (config.databaseProvider || \"sqlite\").toUpperCase() },\n    });\n    edges.push({\n      id: `e${providerId}-${dbTypeId}`,\n      source: providerId,\n      target: dbTypeId,\n      animated: true,\n    });\n    nodeId++;\n  }\n\n  // Add email authentication if present\n  if (config.hasEmailPassword) {\n    const emailAuthId = nodeId.toString();\n    nodes.push({\n      id: emailAuthId,\n      type: \"emailAuth\",\n      position: { x: 400, y: 0 },\n      data: {\n        label: \"Email + Password Auth\",\n        ...config.emailPasswordConfig,\n      },\n    });\n    edges.push({\n      id: `e${authStarterId}-${emailAuthId}`,\n      source: authStarterId,\n      target: emailAuthId,\n      animated: true,\n    });\n    nodeId++;\n\n    // Add email verification if present\n    if (config.hasEmailVerification) {\n      const emailVerificationId = nodeId.toString();\n      nodes.push({\n        id: emailVerificationId,\n        type: \"emailVerification\",\n        position: { x: 600, y: 0 },\n        data: {\n          label: \"Email Verification\",\n          ...config.emailVerificationConfig,\n        },\n      });\n      edges.push({\n        id: `e${emailAuthId}-${emailVerificationId}`,\n        source: emailAuthId,\n        target: emailVerificationId,\n        animated: true,\n      });\n      nodeId++;\n    }\n\n    // Add rate limiting if present\n    if (config.hasRateLimit) {\n      const rateLimitId = nodeId.toString();\n      nodes.push({\n        id: rateLimitId,\n        type: \"rateLimit\",\n        position: { x: 400, y: 600 },\n        data: {\n          label: \"Rate Limiting\",\n          ...config.rateLimitConfig,\n        },\n      });\n      edges.push({\n        id: `e${emailAuthId}-${rateLimitId}`,\n        source: emailAuthId,\n        target: rateLimitId,\n        animated: true,\n      });\n      nodeId++;\n    }\n  }\n\n  // Add social login if present\n  if (config.socialProviders && config.socialProviders.length > 0) {\n    const socialLoginId = nodeId.toString();\n    nodes.push({\n      id: socialLoginId,\n      type: \"socialLogin\",\n      position: { x: 400, y: 200 },\n      data: { label: \"Social Login Providers\" },\n    });\n    edges.push({\n      id: `e${authStarterId}-${socialLoginId}`,\n      source: authStarterId,\n      target: socialLoginId,\n      animated: true,\n    });\n    nodeId++;\n\n    // Add individual social providers\n    config.socialProviders.forEach((provider, index) => {\n      const providerId = nodeId.toString();\n      nodes.push({\n        id: providerId,\n        type: `oauth${provider.charAt(0).toUpperCase() + provider.slice(1)}`,\n        position: { x: 600 + index * 200, y: 300 },\n        data: {\n          label: `${\n            provider.charAt(0).toUpperCase() + provider.slice(1)\n          } OAuth`,\n        },\n      });\n      edges.push({\n        id: `e${socialLoginId}-${providerId}`,\n        source: socialLoginId,\n        target: providerId,\n        animated: true,\n      });\n      nodeId++;\n    });\n\n    // Add account linking if present\n    if (config.hasAccountLinking) {\n      const accountId = nodeId.toString();\n      nodes.push({\n        id: accountId,\n        type: \"account\",\n        position: { x: 600, y: 450 },\n        data: {\n          label: \"Account Linking\",\n          ...config.accountLinkingConfig,\n        },\n      });\n      edges.push({\n        id: `e${socialLoginId}-${accountId}`,\n        source: socialLoginId,\n        target: accountId,\n        animated: true,\n      });\n      nodeId++;\n\n      // Add advanced options if present\n      if (config.hasAdvanced) {\n        const advancedId = nodeId.toString();\n        nodes.push({\n          id: advancedId,\n          type: \"advanced\",\n          position: { x: 600, y: 600 },\n          data: {\n            label: \"Advanced Options\",\n            ...config.advancedConfig,\n          },\n        });\n        edges.push({\n          id: `e${accountId}-${advancedId}`,\n          source: accountId,\n          target: advancedId,\n          animated: true,\n        });\n        nodeId++;\n      }\n    }\n  }\n\n  return { nodes, edges };\n}\n\nexport async function loadAuthFileContent(): Promise<string | null> {\n  try {\n    const response = await fetch(\"/utils/auth.ts\");\n    if (response.ok) {\n      return await response.text();\n    }\n  } catch (error) {\n    console.log(\"No auth.ts file found, using default configuration\");\n  }\n  return null;\n}\n"],"names":[],"mappings":"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"}